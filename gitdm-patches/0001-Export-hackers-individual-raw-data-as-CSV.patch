From 82cb8cc64e7e2d744bbf65673e61979160a5b767 Mon Sep 17 00:00:00 2001
From: Cedric Bosdonnat <cedric.bosdonnat.ooo@free.fr>
Date: Wed, 14 Sep 2011 00:55:30 +0200
Subject: [PATCH 1/2] Export hackers individual raw data as CSV

The data exported for each hacker are the date of the first commit,
the date of the last commit, the commits count. These help distinguish
regular core hackers from one-shot contributors.
---
 README      |    3 +++
 csvdump.py  |   16 +++++++++++++++-
 database.py |    8 +++++++-
 gitdm       |   15 +++++++++++----
 4 files changed, 36 insertions(+), 6 deletions(-)

diff --git a/README b/README
index dab372e..e60285d 100644
--- a/README
+++ b/README
@@ -46,6 +46,9 @@ be:
 
 	-h file	Generate HTML output to the given file
 
+    -H file Export individual developer raw data as CSV. These data could be
+        used to evaluate the fidelity of developers.
+
 	-l num	Only list the top <num> entries in each report.
 
     -n  Use --numstat instead of generated patches to get the statistics.
diff --git a/csvdump.py b/csvdump.py
index b76a5f6..66b8a12 100644
--- a/csvdump.py
+++ b/csvdump.py
@@ -85,4 +85,18 @@ def OutputCSV (file):
         writer.writerow ([author_name, stat.email, empl_name, stat.date,
                           stat.added, stat.removed])
 
-__all__ = [  'AccumulatePatch', 'OutputCSV', 'store_patch' ]
+def OutputHackersCSV (file, hlist):
+    if file is None:
+        return
+    file.write ("Name,Last affiliation,Activity Start,Activity End,Commits\n")
+    for hacker in hlist:
+        if len(hacker.patches) > 0:
+            file.write ("\"%s\",%s,%s,%s,%d\n"%(hacker.name, \
+                        hacker.emailemployer (None, hacker.activity_end).name, \
+                        hacker.activity_start, hacker.activity_end, \
+                        len(hacker.patches)))
+
+__all__ = [  'AccumulatePatch', 'OutputCSV', 'OutputHackersCSV', 'store_patch' ]
+
+
+
diff --git a/database.py b/database.py
index d8c8095..a8677e0 100644
--- a/database.py
+++ b/database.py
@@ -25,7 +25,9 @@ class Hacker:
         self.tested = [ ]
         self.reports = [ ]
         self.testcred = self.repcred = 0
+        self.activity_start = datetime.date.max
+        self.activity_end = datetime.date.min
         self.versions = [ ]
 
     def addemail (self, email, elist):
         self.email.append (email)
@@ -33,7 +35,7 @@ class Hacker:
 
     def emailemployer (self, email, date):
         for i in range (0, len (self.email)):
-            if self.email[i] == email:
+            if (email is None) or (self.email[i] == email):
                 for edate, empl in self.employer[i]:
                     if edate > date:
                         return empl
@@ -44,6 +46,10 @@ class Hacker:
         self.added += patch.added
         self.removed += patch.removed
         self.patches.append (patch)
+        if patch.date < self.activity_start:
+            self.activity_start = patch.date
+        if patch.date > self.activity_end:
+            self.activity_end= patch.date
 
     #
     # There's got to be a better way.
diff --git a/gitdm b/gitdm
index 41634e6..774b059 100755
--- a/gitdm
+++ b/gitdm
@@ -36,6 +36,7 @@ AuthorSOBs = 1
 FileFilter = None
 CSVFile = None
 CSVPrefix = None
+HackersCSV = None
 AkpmOverLt = 0
 DumpDB = 0
 CFName = 'gitdm.config'
@@ -53,6 +54,7 @@ ReportByFileType = 0
 # -d		Output individual developer stats
 # -D		Output date statistics
 # -h hfile	HTML output to hfile
+# -H file   Export individual developer raw data as CSV
 # -l count	Maximum length for output lists
 # -n        Use numstats instead of generated patch from git log
 # -o file	File for text output
@@ -67,10 +69,11 @@ ReportByFileType = 0
 def ParseOpts ():
     global MapUnknown, DevReports
     global DateStats, AuthorSOBs, FileFilter, AkpmOverLt, DumpDB
     global CFName, CSVFile, CSVPrefix,DirName, Aggregate, Numstat
     global ReportByFileType, ReportUnknowns, CompanyFilter, FileReport
+    global HackersCSV
 
-    opts, rest = getopt.getopt(sys.argv[1:], 'ab:dC:c:Df:h:l:no:p:r:stUuwx:yz')
+    opts, rest = getopt.getopt(sys.argv[1:], 'ab:dC:c:Df:H:h:l:no:p:r:stUuwx:yz')
     for opt in opts:
         if opt[0] == '-a':
             AkpmOverLt = 1
@@ -84,4 +86,6 @@ def ParseOpts ():
         elif opt[0] == '-h':
             reports.SetHTMLOutput(open(opt[1], 'w'))
+        elif opt[0] == '-H':
+            HackersCSV = open (opt[1], 'w')
         elif opt[0] == '-l':
             reports.SetMaxList(int(opt[1]))
@@ -480,5 +483,9 @@ if TotalChanged == 0:
 if DateStats:
     PrintDateStats ()
 
+if HackersCSV:
+    csvdump.OutputHackersCSV (HackersCSV, hlist);
+    HackersCSV.close ()
+
 if CSVPrefix:
     csvdump.save_csv (CSVPrefix)
